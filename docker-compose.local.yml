services:
  database:
    container_name: ${NODE_ENV}-database
    image: postgres:16.2-alpine
    ports:
      - '${DB_PORT}:${DB_PORT}'
    restart: unless-stopped
    volumes:
      - .postgres-data/:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 2000M
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
  redis:
    container_name: ${NODE_ENV}-redis
    image: redis:6.2-alpine
    ports:
      - '${REDIS_PORT}:${REDIS_PORT}'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1000M
  api:
    container_name: ${NODE_ENV}-api
    build:
      context: .
      dockerfile: api.Dockerfile
      tags:
        - ${NODE_ENV}-api
    depends_on:
      - database
      - redis
    ports:
      - '${PORT}:${PORT}'
    restart: unless-stopped
    volumes:
      - .:/app
      - /app/.postgres-data/
      - /app/node_modules/
    deploy:
      resources:
        limits:
          memory: 2000M
